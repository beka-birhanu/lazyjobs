// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: workflow.proto

package protob

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED                  EventType = 0
	EventType_EVENT_TYPE_WORKFLOW_EXECUTION_STARTED   EventType = 1
	EventType_EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED EventType = 2
	EventType_EVENT_TYPE_ACTIVITY_TASK_SCHEDULED      EventType = 3
	EventType_EVENT_TYPE_ACTIVITY_TASK_STARTED        EventType = 4
	EventType_EVENT_TYPE_ACTIVITY_TASK_COMPLETED      EventType = 5
	EventType_EVENT_TYPE_TIMER_STARTED                EventType = 6
	EventType_EVENT_TYPE_TIMER_FIRED                  EventType = 7
	EventType_EVENT_TYPE_SIGNAL_RECEIVED              EventType = 8
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_WORKFLOW_EXECUTION_STARTED",
		2: "EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED",
		3: "EVENT_TYPE_ACTIVITY_TASK_SCHEDULED",
		4: "EVENT_TYPE_ACTIVITY_TASK_STARTED",
		5: "EVENT_TYPE_ACTIVITY_TASK_COMPLETED",
		6: "EVENT_TYPE_TIMER_STARTED",
		7: "EVENT_TYPE_TIMER_FIRED",
		8: "EVENT_TYPE_SIGNAL_RECEIVED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":                  0,
		"EVENT_TYPE_WORKFLOW_EXECUTION_STARTED":   1,
		"EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED": 2,
		"EVENT_TYPE_ACTIVITY_TASK_SCHEDULED":      3,
		"EVENT_TYPE_ACTIVITY_TASK_STARTED":        4,
		"EVENT_TYPE_ACTIVITY_TASK_COMPLETED":      5,
		"EVENT_TYPE_TIMER_STARTED":                6,
		"EVENT_TYPE_TIMER_FIRED":                  7,
		"EVENT_TYPE_SIGNAL_RECEIVED":              8,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_workflow_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{0}
}

type ScheduleWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	WorkflowName  string                 `protobuf:"bytes,2,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty"`
	Parameters    [][]byte               `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	ExecutionId   string                 `protobuf:"bytes,4,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleWorkflowRequest) Reset() {
	*x = ScheduleWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkflowRequest) ProtoMessage() {}

func (x *ScheduleWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkflowRequest.ProtoReflect.Descriptor instead.
func (*ScheduleWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleWorkflowRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ScheduleWorkflowRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *ScheduleWorkflowRequest) GetParameters() [][]byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ScheduleWorkflowRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type ScheduleWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleWorkflowResponse) Reset() {
	*x = ScheduleWorkflowResponse{}
	mi := &file_workflow_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkflowResponse) ProtoMessage() {}

func (x *ScheduleWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkflowResponse.ProtoReflect.Descriptor instead.
func (*ScheduleWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleWorkflowResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *ScheduleWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PollForWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollForWorkflowRequest) Reset() {
	*x = PollForWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollForWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollForWorkflowRequest) ProtoMessage() {}

func (x *PollForWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollForWorkflowRequest.ProtoReflect.Descriptor instead.
func (*PollForWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{2}
}

func (x *PollForWorkflowRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

type HistoryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       int64                  `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType     EventType              `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=EventType" json:"event_type,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Details       []byte                 `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryEvent) Reset() {
	*x = HistoryEvent{}
	mi := &file_workflow_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryEvent) ProtoMessage() {}

func (x *HistoryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryEvent.ProtoReflect.Descriptor instead.
func (*HistoryEvent) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{3}
}

func (x *HistoryEvent) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *HistoryEvent) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *HistoryEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HistoryEvent) GetDetails() []byte {
	if x != nil {
		return x.Details
	}
	return nil
}

type Workflow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Parameters    [][]byte               `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Events        []*HistoryEvent        `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"` // Ordered list of workflow events
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_workflow_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{4}
}

func (x *Workflow) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetParameters() [][]byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Workflow) GetEvents() []*HistoryEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type PollForWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Workflow      *Workflow              `protobuf:"bytes,3,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollForWorkflowResponse) Reset() {
	*x = PollForWorkflowResponse{}
	mi := &file_workflow_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollForWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollForWorkflowResponse) ProtoMessage() {}

func (x *PollForWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollForWorkflowResponse.ProtoReflect.Descriptor instead.
func (*PollForWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{5}
}

func (x *PollForWorkflowResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *PollForWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PollForWorkflowResponse) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type AddWorkflowEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Events        map[string][]byte      `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddWorkflowEventsRequest) Reset() {
	*x = AddWorkflowEventsRequest{}
	mi := &file_workflow_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowEventsRequest) ProtoMessage() {}

func (x *AddWorkflowEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowEventsRequest.ProtoReflect.Descriptor instead.
func (*AddWorkflowEventsRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{6}
}

func (x *AddWorkflowEventsRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *AddWorkflowEventsRequest) GetEvents() map[string][]byte {
	if x != nil {
		return x.Events
	}
	return nil
}

type AddWorkflowEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddWorkflowEventsResponse) Reset() {
	*x = AddWorkflowEventsResponse{}
	mi := &file_workflow_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowEventsResponse) ProtoMessage() {}

func (x *AddWorkflowEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowEventsResponse.ProtoReflect.Descriptor instead.
func (*AddWorkflowEventsResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{7}
}

func (x *AddWorkflowEventsResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *AddWorkflowEventsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CompleteWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteWorkflowRequest) Reset() {
	*x = CompleteWorkflowRequest{}
	mi := &file_workflow_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteWorkflowRequest) ProtoMessage() {}

func (x *CompleteWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CompleteWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{8}
}

func (x *CompleteWorkflowRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type CompleteWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteWorkflowResponse) Reset() {
	*x = CompleteWorkflowResponse{}
	mi := &file_workflow_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteWorkflowResponse) ProtoMessage() {}

func (x *CompleteWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CompleteWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{9}
}

func (x *CompleteWorkflowResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *CompleteWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RegisterWorkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueId       string                 `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	WorkerId      string                 `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	mi := &file_workflow_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterWorkerRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *RegisterWorkerRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	mi := &file_workflow_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterWorkerResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *RegisterWorkerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_workflow_proto protoreflect.FileDescriptor

const file_workflow_proto_rawDesc = "" +
	"\n" +
	"\x0eworkflow.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\x01\n" +
	"\x17ScheduleWorkflowRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12#\n" +
	"\rworkflow_name\x18\x02 \x01(\tR\fworkflowName\x12\x1e\n" +
	"\n" +
	"parameters\x18\x03 \x03(\fR\n" +
	"parameters\x12!\n" +
	"\fexecution_id\x18\x04 \x01(\tR\vexecutionId\"T\n" +
	"\x18ScheduleWorkflowResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"7\n" +
	"\x16PollForWorkflowRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\"\xa8\x01\n" +
	"\fHistoryEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\x03R\aeventId\x12)\n" +
	"\n" +
	"event_type\x18\x02 \x01(\x0e2\n" +
	".EventTypeR\teventType\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\adetails\x18\x04 \x01(\fR\adetails\"\x88\x01\n" +
	"\bWorkflow\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"parameters\x18\x03 \x03(\fR\n" +
	"parameters\x12%\n" +
	"\x06events\x18\x04 \x03(\v2\r.HistoryEventR\x06events\"z\n" +
	"\x17PollForWorkflowResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\bworkflow\x18\x03 \x01(\v2\t.WorkflowR\bworkflow\"\xb7\x01\n" +
	"\x18AddWorkflowEventsRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12=\n" +
	"\x06events\x18\x02 \x03(\v2%.AddWorkflowEventsRequest.EventsEntryR\x06events\x1a9\n" +
	"\vEventsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"U\n" +
	"\x19AddWorkflowEventsResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"<\n" +
	"\x17CompleteWorkflowRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\"T\n" +
	"\x18CompleteWorkflowResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"O\n" +
	"\x15RegisterWorkerRequest\x12\x19\n" +
	"\bqueue_id\x18\x01 \x01(\tR\aqueueId\x12\x1b\n" +
	"\tworker_id\x18\x02 \x01(\tR\bworkerId\"R\n" +
	"\x16RegisterWorkerResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\xcf\x02\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12)\n" +
	"%EVENT_TYPE_WORKFLOW_EXECUTION_STARTED\x10\x01\x12+\n" +
	"'EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED\x10\x02\x12&\n" +
	"\"EVENT_TYPE_ACTIVITY_TASK_SCHEDULED\x10\x03\x12$\n" +
	" EVENT_TYPE_ACTIVITY_TASK_STARTED\x10\x04\x12&\n" +
	"\"EVENT_TYPE_ACTIVITY_TASK_COMPLETED\x10\x05\x12\x1c\n" +
	"\x18EVENT_TYPE_TIMER_STARTED\x10\x06\x12\x1a\n" +
	"\x16EVENT_TYPE_TIMER_FIRED\x10\a\x12\x1e\n" +
	"\x1aEVENT_TYPE_SIGNAL_RECEIVED\x10\b2\xf8\x02\n" +
	"\x0fWorkflowService\x12A\n" +
	"\x0eRegisterWorker\x12\x16.RegisterWorkerRequest\x1a\x17.RegisterWorkerResponse\x12G\n" +
	"\x10ScheduleWorkflow\x12\x18.ScheduleWorkflowRequest\x1a\x19.ScheduleWorkflowResponse\x12D\n" +
	"\x0fPollForWorkflow\x12\x17.PollForWorkflowRequest\x1a\x18.PollForWorkflowResponse\x12J\n" +
	"\x11AddWorkflowEvents\x12\x19.AddWorkflowEventsRequest\x1a\x1a.AddWorkflowEventsResponse\x12G\n" +
	"\x10CompleteWorkflow\x12\x18.CompleteWorkflowRequest\x1a\x19.CompleteWorkflowResponseB:Z8github.com/beka-birhanu/lazyjobs/protob/v1/golang;protobb\x06proto3"

var (
	file_workflow_proto_rawDescOnce sync.Once
	file_workflow_proto_rawDescData []byte
)

func file_workflow_proto_rawDescGZIP() []byte {
	file_workflow_proto_rawDescOnce.Do(func() {
		file_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workflow_proto_rawDesc), len(file_workflow_proto_rawDesc)))
	})
	return file_workflow_proto_rawDescData
}

var file_workflow_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_workflow_proto_goTypes = []any{
	(EventType)(0),                    // 0: EventType
	(*ScheduleWorkflowRequest)(nil),   // 1: ScheduleWorkflowRequest
	(*ScheduleWorkflowResponse)(nil),  // 2: ScheduleWorkflowResponse
	(*PollForWorkflowRequest)(nil),    // 3: PollForWorkflowRequest
	(*HistoryEvent)(nil),              // 4: HistoryEvent
	(*Workflow)(nil),                  // 5: Workflow
	(*PollForWorkflowResponse)(nil),   // 6: PollForWorkflowResponse
	(*AddWorkflowEventsRequest)(nil),  // 7: AddWorkflowEventsRequest
	(*AddWorkflowEventsResponse)(nil), // 8: AddWorkflowEventsResponse
	(*CompleteWorkflowRequest)(nil),   // 9: CompleteWorkflowRequest
	(*CompleteWorkflowResponse)(nil),  // 10: CompleteWorkflowResponse
	(*RegisterWorkerRequest)(nil),     // 11: RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil),    // 12: RegisterWorkerResponse
	nil,                               // 13: AddWorkflowEventsRequest.EventsEntry
	(*timestamppb.Timestamp)(nil),     // 14: google.protobuf.Timestamp
}
var file_workflow_proto_depIdxs = []int32{
	0,  // 0: HistoryEvent.event_type:type_name -> EventType
	14, // 1: HistoryEvent.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 2: Workflow.events:type_name -> HistoryEvent
	5,  // 3: PollForWorkflowResponse.workflow:type_name -> Workflow
	13, // 4: AddWorkflowEventsRequest.events:type_name -> AddWorkflowEventsRequest.EventsEntry
	11, // 5: WorkflowService.RegisterWorker:input_type -> RegisterWorkerRequest
	1,  // 6: WorkflowService.ScheduleWorkflow:input_type -> ScheduleWorkflowRequest
	3,  // 7: WorkflowService.PollForWorkflow:input_type -> PollForWorkflowRequest
	7,  // 8: WorkflowService.AddWorkflowEvents:input_type -> AddWorkflowEventsRequest
	9,  // 9: WorkflowService.CompleteWorkflow:input_type -> CompleteWorkflowRequest
	12, // 10: WorkflowService.RegisterWorker:output_type -> RegisterWorkerResponse
	2,  // 11: WorkflowService.ScheduleWorkflow:output_type -> ScheduleWorkflowResponse
	6,  // 12: WorkflowService.PollForWorkflow:output_type -> PollForWorkflowResponse
	8,  // 13: WorkflowService.AddWorkflowEvents:output_type -> AddWorkflowEventsResponse
	10, // 14: WorkflowService.CompleteWorkflow:output_type -> CompleteWorkflowResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_workflow_proto_init() }
func file_workflow_proto_init() {
	if File_workflow_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workflow_proto_rawDesc), len(file_workflow_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workflow_proto_goTypes,
		DependencyIndexes: file_workflow_proto_depIdxs,
		EnumInfos:         file_workflow_proto_enumTypes,
		MessageInfos:      file_workflow_proto_msgTypes,
	}.Build()
	File_workflow_proto = out.File
	file_workflow_proto_goTypes = nil
	file_workflow_proto_depIdxs = nil
}
