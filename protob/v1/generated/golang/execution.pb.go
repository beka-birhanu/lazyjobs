// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: execution.proto

package protob

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	WorkflowName  string                 `protobuf:"bytes,2,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty"`
	Parameters    [][]byte               `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	ExecutionId   string                 `protobuf:"bytes,4,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorkflowRequest) Reset() {
	*x = StartWorkflowRequest{}
	mi := &file_execution_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkflowRequest) ProtoMessage() {}

func (x *StartWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkflowRequest.ProtoReflect.Descriptor instead.
func (*StartWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{0}
}

func (x *StartWorkflowRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *StartWorkflowRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *StartWorkflowRequest) GetParameters() [][]byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *StartWorkflowRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type StartWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorkflowResponse) Reset() {
	*x = StartWorkflowResponse{}
	mi := &file_execution_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkflowResponse) ProtoMessage() {}

func (x *StartWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkflowResponse.ProtoReflect.Descriptor instead.
func (*StartWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{1}
}

func (x *StartWorkflowResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *StartWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PollForWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollForWorkflowRequest) Reset() {
	*x = PollForWorkflowRequest{}
	mi := &file_execution_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollForWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollForWorkflowRequest) ProtoMessage() {}

func (x *PollForWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollForWorkflowRequest.ProtoReflect.Descriptor instead.
func (*PollForWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{2}
}

func (x *PollForWorkflowRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

type WorkflowInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowName  string                 `protobuf:"bytes,1,opt,name=workflow_name,json=workflowName,proto3" json:"workflow_name,omitempty"`
	Parameters    [][]byte               `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	ExecutionId   string                 `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	PastEvents    map[string][]byte      `protobuf:"bytes,4,rep,name=past_events,json=pastEvents,proto3" json:"past_events,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowInfo) Reset() {
	*x = WorkflowInfo{}
	mi := &file_execution_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInfo) ProtoMessage() {}

func (x *WorkflowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInfo.ProtoReflect.Descriptor instead.
func (*WorkflowInfo) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowInfo) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *WorkflowInfo) GetParameters() [][]byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *WorkflowInfo) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *WorkflowInfo) GetPastEvents() map[string][]byte {
	if x != nil {
		return x.PastEvents
	}
	return nil
}

type PollForWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Workflow      *WorkflowInfo          `protobuf:"bytes,3,opt,name=workflow,proto3" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollForWorkflowResponse) Reset() {
	*x = PollForWorkflowResponse{}
	mi := &file_execution_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollForWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollForWorkflowResponse) ProtoMessage() {}

func (x *PollForWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollForWorkflowResponse.ProtoReflect.Descriptor instead.
func (*PollForWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{4}
}

func (x *PollForWorkflowResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *PollForWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PollForWorkflowResponse) GetWorkflow() *WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type AddWorkflowEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Events        map[string][]byte      `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddWorkflowEventsRequest) Reset() {
	*x = AddWorkflowEventsRequest{}
	mi := &file_execution_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowEventsRequest) ProtoMessage() {}

func (x *AddWorkflowEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowEventsRequest.ProtoReflect.Descriptor instead.
func (*AddWorkflowEventsRequest) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{5}
}

func (x *AddWorkflowEventsRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *AddWorkflowEventsRequest) GetEvents() map[string][]byte {
	if x != nil {
		return x.Events
	}
	return nil
}

type AddWorkflowEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddWorkflowEventsResponse) Reset() {
	*x = AddWorkflowEventsResponse{}
	mi := &file_execution_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowEventsResponse) ProtoMessage() {}

func (x *AddWorkflowEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowEventsResponse.ProtoReflect.Descriptor instead.
func (*AddWorkflowEventsResponse) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{6}
}

func (x *AddWorkflowEventsResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *AddWorkflowEventsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CompleteWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   string                 `protobuf:"bytes,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteWorkflowRequest) Reset() {
	*x = CompleteWorkflowRequest{}
	mi := &file_execution_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteWorkflowRequest) ProtoMessage() {}

func (x *CompleteWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CompleteWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{7}
}

func (x *CompleteWorkflowRequest) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

type CompleteWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteWorkflowResponse) Reset() {
	*x = CompleteWorkflowResponse{}
	mi := &file_execution_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteWorkflowResponse) ProtoMessage() {}

func (x *CompleteWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_execution_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CompleteWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_execution_proto_rawDescGZIP(), []int{8}
}

func (x *CompleteWorkflowResponse) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *CompleteWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_execution_proto protoreflect.FileDescriptor

const file_execution_proto_rawDesc = "" +
	"\n" +
	"\x0fexecution.proto\"\x9d\x01\n" +
	"\x14StartWorkflowRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12#\n" +
	"\rworkflow_name\x18\x02 \x01(\tR\fworkflowName\x12\x1e\n" +
	"\n" +
	"parameters\x18\x03 \x03(\fR\n" +
	"parameters\x12!\n" +
	"\fexecution_id\x18\x04 \x01(\tR\vexecutionId\"Q\n" +
	"\x15StartWorkflowResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"7\n" +
	"\x16PollForWorkflowRequest\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\"\xf5\x01\n" +
	"\fWorkflowInfo\x12#\n" +
	"\rworkflow_name\x18\x01 \x01(\tR\fworkflowName\x12\x1e\n" +
	"\n" +
	"parameters\x18\x02 \x03(\fR\n" +
	"parameters\x12!\n" +
	"\fexecution_id\x18\x03 \x01(\tR\vexecutionId\x12>\n" +
	"\vpast_events\x18\x04 \x03(\v2\x1d.WorkflowInfo.PastEventsEntryR\n" +
	"pastEvents\x1a=\n" +
	"\x0fPastEventsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"~\n" +
	"\x17PollForWorkflowResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12)\n" +
	"\bworkflow\x18\x03 \x01(\v2\r.WorkflowInfoR\bworkflow\"\xb7\x01\n" +
	"\x18AddWorkflowEventsRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\x12=\n" +
	"\x06events\x18\x02 \x03(\v2%.AddWorkflowEventsRequest.EventsEntryR\x06events\x1a9\n" +
	"\vEventsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"U\n" +
	"\x19AddWorkflowEventsResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"<\n" +
	"\x17CompleteWorkflowRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\tR\vexecutionId\"T\n" +
	"\x18CompleteWorkflowResponse\x12\x1e\n" +
	"\n" +
	"successful\x18\x01 \x01(\bR\n" +
	"successful\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xac\x02\n" +
	"\x0fWorkflowService\x12>\n" +
	"\rStartWorkflow\x12\x15.StartWorkflowRequest\x1a\x16.StartWorkflowResponse\x12D\n" +
	"\x0fPollForWorkflow\x12\x17.PollForWorkflowRequest\x1a\x18.PollForWorkflowResponse\x12J\n" +
	"\x11AddWorkflowEvents\x12\x19.AddWorkflowEventsRequest\x1a\x1a.AddWorkflowEventsResponse\x12G\n" +
	"\x10CompleteWorkflow\x12\x18.CompleteWorkflowRequest\x1a\x19.CompleteWorkflowResponseB:Z8github.com/beka-birhanu/lazyjobs/protob/v1/golang;protobb\x06proto3"

var (
	file_execution_proto_rawDescOnce sync.Once
	file_execution_proto_rawDescData []byte
)

func file_execution_proto_rawDescGZIP() []byte {
	file_execution_proto_rawDescOnce.Do(func() {
		file_execution_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_execution_proto_rawDesc), len(file_execution_proto_rawDesc)))
	})
	return file_execution_proto_rawDescData
}

var file_execution_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_execution_proto_goTypes = []any{
	(*StartWorkflowRequest)(nil),      // 0: StartWorkflowRequest
	(*StartWorkflowResponse)(nil),     // 1: StartWorkflowResponse
	(*PollForWorkflowRequest)(nil),    // 2: PollForWorkflowRequest
	(*WorkflowInfo)(nil),              // 3: WorkflowInfo
	(*PollForWorkflowResponse)(nil),   // 4: PollForWorkflowResponse
	(*AddWorkflowEventsRequest)(nil),  // 5: AddWorkflowEventsRequest
	(*AddWorkflowEventsResponse)(nil), // 6: AddWorkflowEventsResponse
	(*CompleteWorkflowRequest)(nil),   // 7: CompleteWorkflowRequest
	(*CompleteWorkflowResponse)(nil),  // 8: CompleteWorkflowResponse
	nil,                               // 9: WorkflowInfo.PastEventsEntry
	nil,                               // 10: AddWorkflowEventsRequest.EventsEntry
}
var file_execution_proto_depIdxs = []int32{
	9,  // 0: WorkflowInfo.past_events:type_name -> WorkflowInfo.PastEventsEntry
	3,  // 1: PollForWorkflowResponse.workflow:type_name -> WorkflowInfo
	10, // 2: AddWorkflowEventsRequest.events:type_name -> AddWorkflowEventsRequest.EventsEntry
	0,  // 3: WorkflowService.StartWorkflow:input_type -> StartWorkflowRequest
	2,  // 4: WorkflowService.PollForWorkflow:input_type -> PollForWorkflowRequest
	5,  // 5: WorkflowService.AddWorkflowEvents:input_type -> AddWorkflowEventsRequest
	7,  // 6: WorkflowService.CompleteWorkflow:input_type -> CompleteWorkflowRequest
	1,  // 7: WorkflowService.StartWorkflow:output_type -> StartWorkflowResponse
	4,  // 8: WorkflowService.PollForWorkflow:output_type -> PollForWorkflowResponse
	6,  // 9: WorkflowService.AddWorkflowEvents:output_type -> AddWorkflowEventsResponse
	8,  // 10: WorkflowService.CompleteWorkflow:output_type -> CompleteWorkflowResponse
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_execution_proto_init() }
func file_execution_proto_init() {
	if File_execution_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_execution_proto_rawDesc), len(file_execution_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_execution_proto_goTypes,
		DependencyIndexes: file_execution_proto_depIdxs,
		MessageInfos:      file_execution_proto_msgTypes,
	}.Build()
	File_execution_proto = out.File
	file_execution_proto_goTypes = nil
	file_execution_proto_depIdxs = nil
}
